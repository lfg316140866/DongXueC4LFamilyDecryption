Cmn_UI_AutoComplete_Version = "2.0", function (a) { a || a.alert("为引用Cmn"), a.UI || (a.UI = {}); var b = function (b, c) { function j(b) { Cmn.IsType(b, "array") && b.length ? (g.empty().hide(), $.each(b, function (b, c) { var i, e = h.clone(!0, !0), f = e.find(d.Selector.Text).length > 0 ? e.find(d.Selector.Text) : e; a.Object.IsType(c, "object") ? (i = 0, $.each(c, function (a, b) { 0 == i ? e.attr("cmn-AutoComplete-Value", b) : 1 == i && f.text(b), i++ }), e.data(c), g.append(e)) : Cmn.DebugLog("数据格式不合法") }), "auto" == g.attr("auto") && g.css({ width: e.outerWidth() - 2, top: e.offset().top + e.outerHeight(), left: e.offset().left }), g.show().data(e)) : k() } function k() { g.hide() } function l(b) { /[\S]+/.test((a.Object.IsType(b, "string") ? b : "").trim()) ? CmnAjax.PostData(c, d.SerializeParam(b), function (a) { a = d.FormatData(a), d.OnDataLoadComplete.Trigger([a]), j(a) }) : k() } function m() { f.find(d.Selector.OptionPanel + "[auto=auto]").length <= 0 ? (g = $("<div auto='auto' class='" + Cmn.Str.GetSelectorName(d.Selector.OptionPanel) + "'>"), h = $("<div class='" + Cmn.Str.GetSelectorName(d.Selector.Item) + "'>"), i = $("<span class='" + Cmn.Str.GetSelectorName(d.Selector.Text) + "'>"), g.append(h), h.append(i), f.append(g), g.css({ border: "1px #ccc solid", "z-index": "999", position: "absolute", display: "none", background: "#fff" }), h.css({ padding: "8px", cursor: "pointer" }), $("head").append($("<style>").html(".Cmn-AutoComplete-Item:hover{background:#ccc;color:#fff;}.Cmn-AutoComplete-ItemHover{background:#ccc;color:#fff;}"))) : (g = f.find(d.Selector.OptionPanel + "[auto=auto]"), h = g.find(d.Selector.Item), i = g.find(d.Selector.Text)) } function n(b) { var c = $(this).val(); switch (b.keyCode) { case a.UI.KeyCode.HOME: break; case a.UI.KeyCode.END: break; case a.UI.KeyCode.UP: break; case a.UI.KeyCode.DOWN: break; case a.UI.KeyCode.LEFT: break; case a.UI.KeyCode.RIGHT: break; case a.UI.KeyCode.ENTER: break; case a.UI.KeyCode.SPACE: l(c); break; case a.UI.KeyCode.BACKSPACE: l(c); break; case a.UI.KeyCode.ESCAPE: break; default: l(c) } a.UI.StopBubble(b), a.UI.StopDefault(b) } function o(b) { switch (b.keyCode) { case a.UI.KeyCode.HOME: break; case a.UI.KeyCode.END: break; case a.UI.KeyCode.UP: a.UI.StopDefault(b); break; case a.UI.KeyCode.DOWN: a.UI.StopDefault(b); break; case a.UI.KeyCode.LEFT: break; case a.UI.KeyCode.RIGHT: break; case a.UI.KeyCode.ENTER: case a.UI.KeyCode.SPACE: break; case a.UI.KeyCode.BACKSPACE: break; case a.UI.KeyCode.ESCAPE: } } var d = this, e = null, f = null, g = null, h = null, i = null; this.Limit = 15, this.Selector = { Input: ".Cmn-AutoComplete-Input", OptionPanel: ".Cmn-AutoComplete-OptionPanel", Item: ".Cmn-AutoComplete-Item", Text: ".Cmn-AutoComplete-Text", ItemSelect: ".Cg-AutoComplete-ItemHover" }, this.OnChange = new Cmn.Event(this), this.OnFocus = new Cmn.Event(this), this.OnBlur = new Cmn.Event(this), this.OnDataLoadComplete = new Cmn.Event(this), this.OnSelect = new Cmn.Event(this), this.FormatData = function (b) { return b && a.Object.IsType(b, "string") && (b = $.parseJSON(b)), b.data && (b = a.Object.IsType(b.data, "string") ? $.parseJSON(b.data) : b.data), b || [] }, this.SerializeParam = function (a) { return { param: a, Limit: this.Limit, DisplayFieldCount: 2 } }, this.SetValue = function (a) { var c, f, h, b = g.data()[0] ? g.data() : g; return Cmn.IsType(a, "array") && (a = a[0]), Cmn.IsType(a, "object") && (Cmn.IsType(a.data, "array") && (a = a.data[0]), Cmn.IsType(a, "object")) ? (c = 0, f = e.attr("cmn-AutoComplete-Value"), h = [], $.each(a, function (a, d) { 0 == c ? (b.attr("cmn-AutoComplete-Value", d), h.push(d)) : 1 == c && (b.val(d), h.push(d)), c++ }), h.push(a), h[0] != f && d.OnChange.Trigger(h), 0 != d.OnSelect.Trigger(h) && k(), !1) : (b.attr("cmn-AutoComplete-Value", ""), b.val(""), void 0) }, this.GetValue = function () { return e.attr("cmn-AutoComplete-Value") }, this.GetText = function () { return e.val() }, Cmn.IsType($(b)[0], "htmlinputelement") ? (e = $(b), f = $("body"), m()) : (e = $(b).find(d.Selector.Input), f = $(b)), e.off("keyup").on("keyup", n), e.off("keydown").on("keydown", o), e.off("blur").on("blur", function () { d.OnBlur.Trigger(), k() }), e.off("focus").on("focus", function () { d.OnFocus.Trigger() }), $(g).undelegate(a.UI.EventType.Mousedown).delegate(d.Selector.Item, a.UI.EventType.Mousedown, function (a) { a = a || window.event, 3 != a.which && d.SetValue($(this).data()) }) }; a.UI.AutoComplete = function (a, c) { return new b(a, c) } }(Cmn);